openapi: 3.0.1
info:
  title: CodeSherpa
  description: CodeSherpa is a tool that allows you to execute Python code in a REPL session, maintaining the state between requests, run terminal commands, and returns the output or error message.
  version: 1.0.0
servers:
  - url: http://localhost:3333
paths:
  /repl:
    post:
      summary: Execute Python code in a REPL-session like environment.
      description: Executes the provided Python code in a REPL-like environment, maintaining the state between requests, and returns the output or error message.
      operationId: executeReplCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeExecutionRequest'
      responses:
        200:
          description: Execution result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The output of the executed code.
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /command:
    post:
      summary: Run terminal commands
      description: Runs the provided terminal command and returns the output or error message.
      operationId: runCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandExecutionRequest'
      responses:
        200:
          description: Execution result
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The output of the executed command.
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    CodeExecutionRequest:
      type: object
      properties:
        code:
          type: string
          description: The Python code to be executed in the REPL-like environment.
          example: "import pandas as pd\nimport numpy as np\nnp.random.seed(0)\ndf = pd.DataFrame({'A': np.random.rand(100), 'B': np.random.rand(100)})\ndf['target'] = df['A'] + 2*df['B']\ndf.head()"
    CommandExecutionRequest:
       type: object
       properties:
         command:
           type: string
           description: The terminal command to be executed.
           example: "echo \"Hello, terminal!\""

