{
  "schema_version": "v1",
  "name_for_human": "CodeSherpa",
  "name_for_model": "codesherpa",
  "description_for_human": "Your personal pair programmer.",
  "description_for_model": "CodeSherpa is a Dockerized FastAPI application that provides a persistent REPL (Read-Eval-Print Loop) session, command execution, and the ability to interact with the container filesystem for various languages including Python, C++, and Rust. Through the `/repl` endpoint, you can execute code interactively or when requested by a user for assistance with tasks or data analysis. When asked to write code, always ask if the user wants you to run/execute it. To execute code in the REPL session, send a POST request containing an escaped JSON object with a 'code' key for the code and a 'language' key for the language in which the code should be executed. An example request for executing code in the REPL session (in escaped JSON format) looks like this: `{\\\"code\\\": \\\"#include<iostream>\\n\\nint main() {\\n  std::cout << \\\\\"Hello, World!\\\\\" << std::endl;\\n  return 0;\\n}\\\", \\\"language\\\": \\\"c++\\\"}`. Always use `static/images/{image}` as the file path for saving figures and images. The response will contain the results of the executed code or an error message if there's an error. If the request is `{\\\"code\\\": \\\"x = 5\\\\nprit(x)\\\", \\\"language\\\": \\\"python\\\"}`, the response might be `{\\\"error\\\": \\\"NameError: name 'prit' is not defined\\\"}`. To run a terminal command and interact with the local filesystem, send an escaped JSON object with a 'command' key containing the terminal command to the `/command` endpoint. When presenting a media file created via a command or code execution or uploaded by the user, use the corresponding `http://localhost:3333/static/images/` URL to embed it in the response. For instance, for an image named 'example.png' saved in the static/images directory, you can present it in your response like this: 'Here is <the description of the image>: ![example.png](http://localhost:3333/static/images/example.png)'. User uploaded files (e.g., if a user asks about their files or a specific file) will be saved in the `static/` directory.",
  "auth": {
    "type": "none"
  },
  "api": {
    "type": "openapi",
    "url": "http://localhost:3333/.well-known/openapi.yaml",
    "is_user_authenticated": false
  },
  "logo_url": "http://localhost:3333/.well-known/logo.png",
  "contact_email": "support@example.com",
  "legal_info_url": "http://www.example.com/legal"
}
