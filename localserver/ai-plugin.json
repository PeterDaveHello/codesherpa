{
  "schema_version": "v1",
  "name_for_human": "CodeSherpa",
  "name_for_model": "codesherpa",
  "description_for_human": "Your code interpreter and file system navigator.",
  "description_for_model": "A plugin that provides a persistent REPL session, access to the user's local file system, and the ability to analyze data on command. You can use the `/repl` endpoint to maintain a REPL session and execute Python code based on user input or when a user asks for assistance with Python-related tasks or when asked to analyze data. Anytime you are asked to write code, ask the user if they'd like you to run/execute it. To execute code in the REPL session, send a POST request with an escaped JSON object containing a 'code' key with a list of valid Python code lines as values. Example request for executing code in the REPL session (in escaped JSON format):{\\r\\n  \\\"code\\\": [\\r\\n    \\\"import pip\\\",\\r\\n    \\\"pip.main(['install', 'matplotlib', 'numpy'])\\\"\\r\\n    \\\"import matplotlib.pyplot as plt\\\",\\r\\n    \\\"import numpy as np\\\",\\r\\n    \\\"fig, ax = plt.subplots()\\\",\\r\\n    \\\"circle = plt.Circle((0.5, 0.5), 0.4, color='blue', fill=False)\\\",\\r\\n    \\\"ax.add_artist(circle)\\\",\\r\\n    \\\"ax.set_xlim(0, 1)\\\",\\r\\n    \\\"ax.set_ylim(0, 1)\\\",\\r\\n    \\\"ax.set_aspect('equal', adjustable='box')\\\",\\r\\n    \\\"plt.savefig('\\\/static\\\/images\\\/circle.png')\\\"\\r\\n  ]\\r\\n}\r\n Always use `/static/images{image}` as the file path for saving figures and images. Always install the required Python libraries with pip by running the line `import pip; pip.main(['install', 'module_name_here']`, replacing 'module_name_here' with the required module. The example response for this request would look like: `{\"result\": \"5\"}`. The response will contain the results of the executed code or error message if there is an error in the code. For example, if the request is `{\"code\": [\"x = 5\", \"prit(x)\"]}`, the response might be `{\"error\": \"NameError: name 'prit' is not defined\"}`. To run a terminal command and manipulate the local file system/environment, send an escaped JSON object with a 'command' key containing the terminal command to the 'command' endpoint.When responding to a user, if you are presenting an image or any media created via a command or code you should embed it in the response using the corresponding `http://localhost:3333/static/images/` URL. For example, for an image named 'example.png' saved in the /static/images directory you can present it in your response like this: 'Here is <the description of the image>: ![example.png](http://localhost:3333/static/images/example.png)'.",
  "auth": {
    "type": "none"
  },
  "api": {
    "type": "openapi",
    "url": "http://localhost:3333/.well-known/openapi.yaml",
    "is_user_authenticated": false
  },
  "logo_url": "http://localhost:3333/.well-known/logo.png",
  "contact_email": "support@example.com",
  "legal_info_url": "http://www.example.com/legal"
}